{"version":3,"sources":["Counter.js","Timer.js","Button.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","className","id","this","props","titleId","title","onClick","value","minId","lengthId","length","addId","React","Component","Timer","timerType","minute","second","Button","playBtn","reset","App","state","breakLength","sessionLength","startStop","bind","breakClickHandler","sessionClickHandler","counterControl","playClickHandler","countDown","timerTypeSwitch","alarm","setState","sound","document","getElementById","pause","currentTime","event","btnValue","currentTarget","stateTag","stateValue","timerStart","setInterval","clearInterval","console","log","play","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.859940e1.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Counter extends React.Component {\n  render() {\n    return (\n      <div className=\"counter-container\">\n        <h5 id={this.props.titleId}>{this.props.title}</h5>\n        <div className=\"counter\">\n          <button onClick={this.props.onClick} value=\"-\" id={this.props.minId}>\n            -\n          </button>\n          <p id={this.props.lengthId}>{this.props.length}</p>\n          <button onClick={this.props.onClick} value=\"+\" id={this.props.addId}>\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default class Timer extends React.Component {\n  render() {\n    return (\n      <div className=\"timer\">\n        <h5 id=\"timer-label\">{this.props.timerType}</h5>\n        <p id=\"time-left\">\n          {this.props.minute < 10 ? `0${this.props.minute}` : this.props.minute}\n          :\n          {this.props.second < 10 ? `0${this.props.second}` : this.props.second}\n        </p>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default class Button extends React.Component {\n  render() {\n    return (\n      <div className=\"play-buttons\">\n        <button onClick={this.props.playBtn} id=\"start_stop\">\n          START/STOP\n        </button>\n        <button onClick={this.props.reset} id=\"reset\">\n          RESET\n        </button>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Counter from './Counter';\nimport Timer from './Timer';\nimport Button from './Button';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minute: 25,\n      second: 0,\n      breakLength: 5,\n      sessionLength: 25,\n      startStop: \"stop\",\n      timerType: \"Session\"\n    };\n\n    this.reset = this.reset.bind(this);\n    this.breakClickHandler = this.breakClickHandler.bind(this);\n    this.sessionClickHandler = this.sessionClickHandler.bind(this);\n    this.counterControl = this.counterControl.bind(this);\n    this.playClickHandler = this.playClickHandler.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.timerTypeSwitch = this.timerTypeSwitch.bind(this);\n    this.alarm = this.alarm.bind(this);\n  }\n\n  reset() {\n    this.setState({\n      minute: 25,\n      second: 0,\n      breakLength: 5,\n      sessionLength: 25,\n      startStop: \"stop\",\n      timerType: \"Session\"\n    });\n    const sound = document.getElementById(\"beep\");\n    sound.pause();\n    sound.currentTime = 0;\n  }\n\n  breakClickHandler(event) {\n    const btnValue = event.currentTarget.value;\n    this.counterControl(btnValue, \"breakLength\", this.state.breakLength);\n  }\n\n  sessionClickHandler(event) {\n    this.counterControl(\n      event.currentTarget.value,\n      \"sessionLength\",\n      this.state.sessionLength\n    );\n  }\n\n  counterControl(btnValue, stateTag, stateValue) {\n    if (this.state.startStop === \"start\") {\n      return;\n    }\n    if (btnValue === \"-\") {\n      if (stateValue > 1) {\n        if (\n          this.state.timerType === \"Session\" &&\n          stateTag === \"sessionLength\"\n        ) {\n          this.setState({\n            [stateTag]: stateValue - 1,\n            minute: stateValue - 1,\n            second: 0\n          });\n        } else if (\n          this.state.timerType === \"Break\" &&\n          stateTag === \"breakLength\"\n        ) {\n          this.setState({\n            [stateTag]: stateValue - 1,\n            minute: stateValue - 1,\n            second: 0\n          });\n        } else {\n          this.setState({\n            [stateTag]: stateValue - 1\n          });\n        }\n      }\n    } else if (btnValue === \"+\") {\n      if (stateValue < 60) {\n        if (\n          this.state.timerType === \"Session\" &&\n          stateTag === \"sessionLength\"\n        ) {\n          this.setState({\n            [stateTag]: stateValue + 1,\n            minute: stateValue + 1,\n            second: 0\n          });\n        } else if (\n          this.state.timerType === \"Break\" &&\n          stateTag === \"breakLength\"\n        ) {\n          this.setState({\n            [stateTag]: stateValue + 1,\n            minute: stateValue + 1,\n            second: 0\n          });\n        } else {\n          this.setState({\n            [stateTag]: stateValue + 1\n          });\n        }\n      }\n    }\n  }\n\n  playClickHandler() {\n    if (this.state.startStop === \"stop\") {\n      this.setState({\n        startStop: \"start\"\n      });\n    }\n    if (this.state.startStop === \"start\") {\n      this.setState({\n        startStop: \"stop\"\n      });\n    }\n    this.countDown();\n  }\n\n  countDown() {\n    const timerStart = setInterval(() => {\n      if (this.state.startStop === \"stop\") {\n        clearInterval(timerStart);\n      }\n      if (this.state.startStop === \"start\") {\n        if (this.state.second === 0) {\n          if (this.state.minute === 0) {\n            this.alarm();\n            this.timerTypeSwitch();\n            console.log(this.state.timerType);\n          } else {\n            this.setState({\n              second: 59,\n              minute: this.state.minute - 1\n            });\n          }\n        } else {\n          this.setState({\n            second: this.state.second - 1\n          });\n        }\n      }\n    }, 1000);\n  }\n\n  timerTypeSwitch() {\n    if (this.state.timerType === \"Session\") {\n      this.setState({\n        minute: this.state.breakLength,\n        second: 0,\n        timerType: \"Break\"\n      });\n    } else if (this.state.timerType === \"Break\") {\n      this.setState({\n        minute: this.state.sessionLength,\n        second: 0,\n        timerType: \"Session\"\n      });\n    }\n  }\n\n  alarm() {\n    const sound = document.getElementById(\"beep\");\n    sound.play();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PoMoDoRo TIMER</h1>\n        <div className=\"counters\">\n          <Counter\n            titleId=\"break-label\"\n            title=\"Break Length\"\n            minId=\"break-decrement\"\n            addId=\"break-increment\"\n            lengthId=\"break-length\"\n            length={this.state.breakLength}\n            onClick={this.breakClickHandler}\n          />\n          <Counter\n            titleId=\"session-label\"\n            title=\"Session Length\"\n            minId=\"session-decrement\"\n            addId=\"session-increment\"\n            lengthId=\"session-length\"\n            length={this.state.sessionLength}\n            onClick={this.sessionClickHandler}\n          />\n        </div>\n        <Timer\n          minute={this.state.minute}\n          second={this.state.second}\n          timerType={this.state.timerType}\n        />\n        <Button reset={this.reset} playBtn={this.playClickHandler} />\n        <audio\n          id=\"beep\"\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        ></audio>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}